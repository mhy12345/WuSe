document.getElementById('graph-container').style.background="#000";
var canvas = document.getElementById("mycanvas"),
ctx = canvas.getContext("2d");
var backimg = new Image;
backimg.src = "./modules/img/firework.jpg";
var lastCalledTime = Date.now(),
fps = 100,
delta = 0,
fps_count = 0,
time = 0,
fireworks = [];
width=403.75;
height=1110;
var count=0;

function getrbg(){
    if(colors.length){
        ++count;
        return colors[colors.length%count];
    }
}

function Firework(a, b, c) {
    this.ctx = a,
    this.w = b,
    this.h = c,
    this.pos = {
        x: b / 2,
        y: c / 2
    },
    this.color = "rgb(169,168,169)",
    this.duration = 2e3,
    this.num = 18,
    this.particles = [],
    this.speed = 6,
    this.size = 4,
    this.pre_time = (new Date).getTime(),
    this.cur_time = this.pre_time,
    this.time = 0,
    this.init = function(a, b, c, d, e) {
        this.pos = a ? a: this.pos,
        this.color = b ? b: this.color,
        this.duration = c ? c: this.duration,
        this.num = d ? d: this.num,
        this.speed = e ? e: this.speed;
        for (var f = d3.scaleLinear().domain([0, this.num - 1]).range([.5 * Math.PI, 2.5 * Math.PI]), g = 0; g < this.num; g++) {
            var h = f(g),
            i = Math.cos(h),
            j = Math.sin(h),
            k = new Victor(i, j);
            k.normalize(),
            this.particles.push({
                x: this.pos.x,
                y: this.pos.y,
                vx: k.x * this.speed,
                vy: k.y * this.speed
            })
        }
    },
    this.update = function() {
        this.cur_time = (new Date).getTime(),
        this.time += this.cur_time - this.pre_time,
        this.pre_time = this.cur_time;
        for (var a = this.particles.length - 1; a >= 0; a--) this.particles[a].vy -= .2,
        this.particles[a].x += this.particles[a].vx,
        this.particles[a].y -= this.particles[a].vy
    },
    this.render = function() {
        for (var b = this.particles.length - 1; b >= 0; b--) {
            var c = this.particles[b].x,
            d = this.particles[b].y,
            e = this.color;
            a.beginPath(),
            a.fillStyle = e,
            a.arc(c, d, this.size, 0, 2 * Math.PI),
            a.fill()
        }
    }
}
setInterval(function() {
    updating();
    ctx.save(),
    ctx.globalAlpha = .2,
    ctx.fillStyle = "black",
    ctx.fillRect(0, 0, width, height),
    ctx.drawImage(backimg, 0, 0, width, height),
    ctx.restore(),
    ctx.save(),
    ctx.globalCompositeOperation = "lighter",
    Math.random() < .1 && fireworks.length < 50 && (fireworks.push(new Firework(ctx, width, height)), fireworks[fireworks.length - 1].init({
        x: 50 + Math.random() * (width - 50),
        y: 90 + 100 * Math.random()
    },
    colors[colors.length%count],
    1500 + 1e3 * Math.random(), parseInt(15 + 10 * Math.random()), 4 + 5 * Math.random()), fireworks[fireworks.length - 1].size = 4 + 3 * Math.random());
    for (var a = fireworks.length - 1; a >= 0; a--) fireworks[a].time < fireworks[a].duration ? (fireworks[a].update(), fireworks[a].render()) : fireworks.splice(a, 1);
    ctx.restore()
},
33);